import './App.css';
import React, { useState, useEffect } from 'react';
import { Grid, Typography } from '@material-ui/core';
import SelectBy from './components/SelectBy.js';
import Cards from './components/Cards';
import data from './data/data'
import { makeStyles } from '@material-ui/core/styles';
import Table from './components/Table';

const useStyles = makeStyles((theme) => ({
    root: {
      padding: '2rem',
      color: '#200550'
    }
}));

function App() {
  const classes = useStyles();
  const [location, setLocation] = useState('all');
  const [value, setValue] = useState(1);
  const [ filtered, setFiltered ] = useState([]);
  const [ touched, setTouched ] = useState(false);

  const handleChangeRadio = (event) => {
      setLocation(event.target.value);
      setTouched(true);
  };

  const handleChangeSelect = (event) => {
      setValue(event.target.value);
      setTouched(true);
  };

  useEffect(() => {
    let filteredData;
    if (touched) {
      switch(location) {
        case 'europe':
          filteredData = data.filter(item => item.region === 'UK' || item.region === 'Europe');
          break;
        case 'us':
          filteredData = data.filter(item => item.region === 'North America');
          break;
        case 'asia':
          filteredData = data.filter(item => item.region === 'APAC');
          break;
        default:
          filteredData = data;
      };
      switch(value) {
        case 1:
          filteredData = filteredData.filter(item => item.babObValueType === 'Existing portfolio enhancement' || item.obValueType === 'New portfolio expansion');
          break;
        case 2:
          filteredData = filteredData.filter(item => item.babObValueType === 'Efficiency Enhancement');
          break;
        case 3:
          filteredData = filteredData.filter(item => item.babObValueType === 'Network optimisation');
          break;
        case 4:
          filteredData = filteredData.filter(item => item.babObValueType === 'Enhance financial performance-Revenue growth');
          break;
        case 5:
          filteredData = filteredData.filter(item => item.obValueType === 'Operating cost reductions');
          break;
        default:
          return filteredData;
      };
      setFiltered(filteredData);
    }
  }, [ touched, location, value ])

  return (
    <div className="App">
      <Grid container className={classes.root}>
        <Grid item md={8}>
          <Typography variant="h5">Discover the value generated by bank APIs</Typography>
          {!filtered.length ? <Table /> : <Cards banks={filtered}/>}
        </Grid>
        <Grid item md={4}>
          <SelectBy
            handleChangeRadio={handleChangeRadio}
            handleChangeSelect={handleChangeSelect}
            location={location}
            value={value}
          />
        </Grid>
      </Grid>
    </div>
  );
}

export default App;
