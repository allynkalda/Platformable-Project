import './App.css';
import React, { useState, useEffect } from 'react';
import { Grid, Typography } from '@material-ui/core';
import SelectBy from './components/SelectBy.js';
import Cards from './components/Cards';
import data from './data/data'
import { makeStyles } from '@material-ui/core/styles';
import Table from './components/Table';

const useStyles = makeStyles((theme) => ({
    root: {
      padding: '2rem',
      color: '#200550'
    },
    table: {
      // height: '100vh'
    },
    select: {
      flex: 'flex',
      paddingTop: '4rem'
    }
}));

function App() {
  const classes = useStyles();
  const [ location, setLocation ] = useState('all');
  const [ value, setValue ] = useState(1);
  const [ filtered, setFiltered ] = useState([]);
  const [ currentPage, setCurrentPage ] = useState(1);

  const handleChangeRadio = (event) => {
      setLocation(event.target.value);
      setCurrentPage(1);
      filter();
  };

  const handleChangeSelect = (event) => {
      setValue(event.target.value);
      setCurrentPage(1);
      filter();
  };

  const filter = () => {
    let filteredData;
    console.log(value)
    console.log(location)
   
      switch(location) {
        case 'europe':
          filteredData = data.filter(item => item.region === 'UK' || item.region === 'Europe');
          break;
        case 'us':
          filteredData = data.filter(item => item.region === 'North America');
          break;
        case 'asia':
          filteredData = data.filter(item => item.region === 'APAC');
          break;
        default:
          filteredData = data;
      };
      switch(value) {
        case 1:
          filteredData = filteredData.filter(item => item.babObValueType === 'Existing portfolio enhancement' || item.obValueType === 'New portfolio expansion');
          break;
        case 2:
          filteredData = filteredData.filter(item => item.babObValueType === 'Efficiency Enhancement');
          break;
        case 3:
          filteredData = filteredData.filter(item => item.babObValueType === 'Network optimisation');
          break;
        case 4:
          filteredData = filteredData.filter(item => item.babObValueType === 'Enhance financial performance-Revenue growth');
          break;
        case 5:
          filteredData = filteredData.filter(item => item.obValueType === 'Operating cost reductions');
          break;
        default:
          filteredData = filteredData;
      };
      console.log(filteredData)
      setFiltered(filteredData);
  };

  useEffect(() => {
    filter();
    console.log('mdm')
  }, [ location, value ])

  return (
    <div className="App">
      <Grid container className={classes.root} align="center" justify="center" >
        <div className={classes.table}>
          <Typography variant="h5">Discover the value generated by bank APIs</Typography>
          <Table />
        </div>
        <Grid item md={4} align="center">
          <div className={classes.select}>
            <SelectBy
                handleChangeRadio={handleChangeRadio}
                handleChangeSelect={handleChangeSelect}
                location={location}
                value={value}
            />
          </div>
        </Grid>
        <Grid item md={8}>
            <Cards banks={filtered} setCurrentPage={setCurrentPage} currentPage={currentPage}/>
        </Grid>
      </Grid>
    </div>
  );
}

export default App;
